{
  "schedule": [
    {
      "date": "2019-01-13T13:30:00",
      "type": "Lecture",
      "topic": "Course overview and goals, logistics, software, introduction to computing and to computers",
	"notes": "<a href=\"lectures/110-1-Intro.pdf\">Lecture PDF</a>",
	"code": "",
      "hw": ""
    },
    {
      "date": "2019-01-15T13:30:00",
      "type": "Lecture",
      "topic": "<b>Basic Python</b>: programming languages, primitive scalar object types, basic operators, variables and assignment, casting and conversions, syntactic and semantic errors, notion of functions, basic style rules",
	"notes": "<a href=\"lectures/110-2-BasicPython.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-01-17T13:30:00",
      "type": "Lab",
      "topic": "Lab: How to use the Spyder editor, experimenting with basic python concepts, solving problems, code debugging, Autolab and Autograder",
      "notes": "<a href=\"lectures/110-3-Lab.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": ""
    },

      {
      "date": "2019-01-20T13:30:00",
      "type": "Lecture",
      "topic": "<b>Non-scalar data types, strings</b>: Binary representations, character encoding, strings data types, quoting, operators, operator overloading, indexing",
      "notes": "<a href=\"lectures/110-4-Strings.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-01-22T13:30:00",
      "type": "Lecture",
      "topic": "<b>Strings and Boolean data types, conditionals </b>: Operations on strings (length, indexing, slicing, replacing, finding), conversions, boolean variables, relational operators, logical operators, flow control using conditional constructs, indentation and scoping",
      "notes": "<a href=\"lectures/110-5-StringsBoolCond.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": "hw01 due (basic python)"
    },
    {
      "date": "2019-01-24T13:30:00",
      "type": "Lab",
      "topic": "Lab: Use of all primitive data types, operators (numeric, relational, logical) program branching and decision-making using conditionals",
      "notes": "Textbook Chapters 2 and 5 (except sections using Lists)",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-01-27T13:30:00",
      "type": "Lecture",
	"topic": "<b>Non-scalar data types, lists</b>: data structures, tuples, mutability and lists, general access and modification operations on lists, indexing and slicing, aliasing effects",
      "notes": "<a href=\"lectures/110-6-ListsTuples-1.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-01-29T13:30:00",
      "type": "Lecture",
      "topic": "<b>Non-scalar data types, lists</b>: mutability vs. immutability, aliasing vs. cloning, retrieving, adding, and removing elements, slicing and cloning, operator overloading and concatenation, utility methods and functions available for lists, key function for comparison",
      "notes": "<a href=\"lectures/110-7-ListsTuples-2.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": "hw02 due (strings and booleans)"
    },
    {
      "date": "2019-01-31T13:30:00",
      "type": "Lab",
      "topic": "Lab: Operations on and manipulation of lists data types",
      "notes": "Textbook Chapter 4 (except sections using loops)",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-03T13:30:00",
      "type": "Lecture",
	"topic": "<b>Iteration</b>: Repeated actions using for loops (definite loops), range(), scoping, examples of typical use, continue statement",
      "notes": "<a href=\"lectures/110-8-Iteration-1.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-05T13:30:00",
      "type": "Lecture",
      "topic": "<b>Iteration</b>: break statement, scope of variables, nested loops, matrix data structure, while loops (indefinite loops), use of sentinel variables, never ending loops",
      "notes": "<a href=\"lectures/110-9-Iteration-2.pdf\">Lecture PDF</a><br><a href=\"lectures/110-9-Iteration-2-split.pdf\">Lecture PDF (split slides) </a>",
      "code": "",
      "hw": "hw03 due (tuples, lists)"
    },
    {
      "date": "2019-02-07T13:30:00",
      "type": "Lab",
      "topic": "Lab: Flow control using while and for loops, variable scope",
      "notes": "Textbook Chapter 4, first section, and Chapter 7, second section",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-10T13:30:00",
      "type": "Lecture",
      "topic": "<b>Functions for decomposition, abstraction, and reusability</b>: functions as subprograms, function definition, functions for task decomposition, code modularity and code reusability, arguments, local scoping, stack frames, returning values, modifying arguments",
      "notes": "<a href=\"lectures/110-10-Functions-1.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-12T13:30:00",
      "type": "NoClass",
      "topic": "Sports Day",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-14T13:30:00",
      "type": "Lab",
      "topic": "Lab: Functions, use positional, keyword, and arbitrary number of arguments, returning and modifying values, scopes",
      "notes": "<a href=\"lectures/110-11-Lab.pdf\">Lecture PDF</a>",
      "code": "",
      "hw": "hw04 due (iteration)"
    },
    {
      "date": "2019-02-17T13:30:00",
      "type": "Lecture",
	"topic": "<b>Functions for decomposition, abstraction, and reusability</b>:  abstraction, specifications, documenting a function with docstrings, inline comments, creating and using modules, import statements, dot notation, useful modules (numpy, math)",
      "notes": "<a href=\"lectures/110-12-Functions-2.pdf\">Lecture PDF</a><br>Textbook Chapter 8",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-19T13:30:00",
      "type": "Lecture",
      "topic": "<b> Preparation to the midterm exam I:</b> Overview and practice of topics so far, (better) use of Spyder, Q&A",
      "notes": "<a href=\"lectures/reference-card.pdf\">Pyhton reference card</a>",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-21T13:30:00",
      "type": "Exam",
      "topic": "MIDTERM EXAM I: All topics considered so far in the course",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-24T13:30:00",
      "type": "Lecture",
      "topic": "<b>Associative data types, dictionaries 1</b>: creating labeled data using dictionaries, lists vs. dictionaries, type restrictions, initialization, access, updating, removal of entries",
      "notes": "<a href=\"lectures/110-13-Dictionaries.pdf\">Lecture PDF</a><br>Textbook Chapter 6",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-02-26T13:30:00",
	"type": "Lecture",	
	"topic": "<b>Non-scalar data types, multi-dimensional arrays</b>: lists to represent multi-dimensional data arrays, use of the Numpy module, applications in numeric linear algebra and image processing",
	"topic": "<b>Regular expressions for searching patterns in strings</b>: <code>Re</code> module, character groups, quantifiers, extraction, position, finding multiple matches",
	"topic": "<b>Dictionaries 2, Sets</b>: dictionaries as hashed types, modalities for creating dictionaries, accessing, adding, modifying and removing items using class methods, methods for inspecting a dictionary, view objects, iterating over the items and over the keys, useful operations on dictionary data, definition of sets, sets vs. lists vs. dictionaries, modalities for creating a set, operations on sets, available methods and functions",
      "notes": "<a href=\"lectures/110-14-DictionariesSets.pdf\">Lecture PDF</a><br><a href=\"lectures/L14.py\">Python code used in lecture</a>",
      "code": "",
      "hw": "hw05 due (functions, imports, modules)"
    },
    {
      "date": "2019-02-28T13:30:00",
      "type": "Lab",
      "topic": "Lab: Use of dictionaries and sets for structuring and searching data",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-03T13:30:00",
      "type": "NoClass",
      "topic": "Spring Break",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-05T13:30:00",
      "type": "NoClass",
      "topic": "Spring Break",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-07T13:30:00",
      "type": "NoClass",
      "topic": "Spring Break",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-10T13:30:00",
      "type": "Lecture",
      "topic": "<b>Reading and writing files</b>: opening and closing files, error codes, paths, reading lines, writing formatted text",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-12T13:30:00",
      "type": "Lecture",
      "topic": "<b>Files, programs, and user inputs</b>: creating, deleting, and renaming files and folders, running programs, reading command line arguments",
      "notes": "",
      "code": "",
      "hw": "hw06 due (dictionaries, sets)"
    },
    {
      "date": "2019-03-14T13:30:00",
      "type": "Lab",
      "topic": "Lab: Using I/O from/to files and command line to manipulate bases of data",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-17T13:30:00",
      "type": "Lecture",
      "topic": "<b>Object-oriented programming</b>: abstract data types and classes, methods, instantiation, designing modular and reusable programs using abstract data types",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-19T13:30:00",
      "type": "Lecture",
	"topic": "<b>Object-oriented programming</b>: inheritance, encapsulation and information hiding, iterators",
      "notes": "",
      "code": "",
      "hw": "hw07 due (files)"
    },
    {
      "date": "2019-03-21T13:30:00",
      "type": "Lab",
      "topic": "Lab: Designing code using object-oriented programming",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-24T13:30:00",
      "type": "Lecture",
      "topic": "<b>Divide-and-conquer paradigm</b>: divide-conquer-combine, from iteration to recursion, mathematical induction, advantages and challenges, factorial and binary search examples",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-26T13:30:00",
      "type": "Lecture",
      "topic": "<b>Divide-and-conquer paradigm</b>: mergesort and quicksort examples, fractals, tower of Hanoi, memory and time requirements",
      "notes": "",
      "code": "",
      "hw": "hw08 due (object-oriented programming)"
    },
    {
      "date": "2019-03-28T13:30:00",
      "type": "Lab",
      "topic": "Lab: Application of the divide-and-conquer paradigm, use of recursion",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-03-31T13:30:00",
      "type": "Lecture",
      "topic": "<b>Efficiency of algorithms</b>: notion of complexity, number of operations, worst case behavior, big O notation, basic examples of linear, log-linear, log, polynomial, exponential complexities",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-02T13:30:00",
      "type": "Lecture",
      "topic": "<b>Efficiency of algorithms</b>: complexity analysis of different algorithms for search and sorting tasks",
      "notes": "",
      "code": "",
      "hw": "hw09 due (divide-and-conquer)"
    },
    {
      "date": "2019-04-04T13:30:00",
      "type": "Exam",
      "topic": "MIDTERM EXAM II: Focus on the topics considered from the first assessment test up to now",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-07T13:30:00",
      "type": "Lecture",
      "topic": "<b>Data visualization and animation using Matplotlib</b>: overview, main functionalities, data plotting ",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-09T13:30:00",
      "type": "Lecture",
      "topic": "<b>Data visualization and animation using Matplotlib</b>: complex data plots, basic animations",
      "notes": "",
      "code": "",
      "hw": "hw10 due (efficiency)"
    },
    {
      "date": "2019-04-11T13:30:00",
      "type": "Lab",
      "topic": "Lab: Use of Matplotlib for data visualization and animation",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-14T13:30:00",
      "type": "Lecture",
      "topic": "<b>Simulation models</b>: agent-based models, Cellular Automata for deterministic simulation of spatially distributed process",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-16T13:30:00",
      "type": "Lecture",
      "topic": "<b>Simulation models</b>: random number generation in a computer, notion of Monte Carlo techniques, Genetic Algorithms for solving complex optimization problems",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-18T13:30:00",
      "type": "Lab",
      "topic": "Lab: Implementing simulation models in application scenarios of interest",
      "notes": "",
      "code": "",
      "hw": "project checkpoint"
    },
    {
      "date": "2019-04-21T13:30:00",
      "type": "Lecture",
      "topic": "<b>Combinatorial models</b>: knapsack optimization problems, practical applications, greedy approaches, dynamic programming approach, complexity",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-23T13:30:00",
      "type": "Lecture",
      "topic": "<b>Combinatorial models</b>: graph optimization problems, finding the shortest path, finding the min-cut, practical applications, complexity",
      "notes": "",
      "code": "",
      "hw": ""
    },
    {
      "date": "2019-04-25T13:30:00",
      "type": "Lab",
      "topic": "Lab: Algorithms for combinatorial models",
      "notes": "",
      "code": "",
      "hw": "project due"
    },
    {
      "date": "2019-05-01T8:30:00",
      "type": "Exam",
      "topic": "FINAL EXAM (room 2062)",
      "notes": "",
      "code": "",
      "hw": ""
    }
  ]
}
